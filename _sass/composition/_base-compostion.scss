/* Grid
############################################################################ */
.grid {
  display: grid;
  gap: var(--fluid-space-m);

  @media only screen and (min-width: $vp-medium) {
    grid-template-columns: repeat(auto-fit, minmax(var(--max-col-width), 1fr));
  }
}

/* Small Grid
############################################################################ */
.grid-small {
  display: grid;
  gap: var(--fluid-space-s);

  @media only screen and (min-width: $vp-small) {
    grid-template-columns: repeat(auto-fit, minmax(var(--max-col-width-small), 1fr));
  }
}

/* Large Grid
############################################################################ */
.grid-large {
  display: grid;
  gap: var(--fluid-space-m);

  @media only screen and (min-width: $vp-medium) {
    grid-template-columns: repeat(auto-fit, minmax(var(--max-col-width-large), 1fr));
  }
}

/* Vertical Stack
############################################################################ */
.vertical-stack {
  & > *:not(details) {
    padding-top: var(--xxl);
  }
}

/* Textbox
############################################################################ */

.textbox {
  display: block;
  max-width: var(--max-width-content);
}

/* Section
############################################################################ */

section,
.section {
  padding-top: var(--fluid-space-l);
  padding-bottom: var(--fluid-space-l);

  & > * + * {
    margin-top: var(--xxl);
  }

  &.is-large {
    display: flex;
    justify-content: center;

    & > * {
      max-width: var(--large-content);
    }
  }
}
